1.redis使用场景、数据类型：
使用场景：缓存、分布式锁、过滤器（使用set类型）、布隆过滤器
数据类型：list、set、zset、string、hash
string set、get、decr、incr、mget 微博数 粉丝数
hash hget、hset、hgetall 商品信息
list lpush、lpop、rpush、rpop、lrange 粉丝列表 通过lrange实现分页查询
set sadd、spop、sunion 共同粉丝
zset zadd、zrange 礼物排行榜

2.redis为什么是单线程：
redis是基于内存的操作，cpu不是性能瓶颈。内存的大小或者网络带宽才是性能瓶颈。
不需要加锁、避免了频繁的上下文切换

3.redis持久化机制：
aof：持续记录redis操作到文件（主流）
优点：写入性能高 可以更好的保护数据不丢失 一般最多丢失1s的数据
缺点：文件比rdb大，恢复速度慢

rdb：快照，保存某个时刻的redis数据存储状态
优点：恢复速度快于aof
缺点：无法做到实时持久化 每次运行都会执行fork操作 频繁执行成本高

4.redis集群方案及实现：
主从模式（主写从读）
哨兵模式（监听 选举）
集群模式（分布式存储 hash算法）

5.缓存雪崩：某个时间段缓存大量失效，导致大量请求直接落到数据库

6.缓存穿透：查询缓存无数据，然后查询数据库也无数据，结果返回两次空（设置null值缓存、或者使用布隆过滤器）

7.缓存预热：系统上线时，将相关缓存提前加载到系统中

8.如何解决缓存雪崩：集群、合理设置过期时间

9.键过期策略：
定期删除
惰性删除

10.内存淘汰策略：
写入报错、（设置过期时间的键）随机删除、（设置过期时间的键）最近最少使用删除
